{
    "version": "0.2.0",
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "Config Check",
            "program": "${workspaceFolder}/dist/cli.js",
            "args": [
                "config-check"
            ],
            "console": "integratedTerminal",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "cwd": "${workspaceFolder}",
            "preLaunchTask": "Build"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Fusion",
            "program": "${workspaceFolder}/dist/cli.js",
            "args": [
                "--overwrite"
            ],
            "console": "integratedTerminal",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "cwd": "${workspaceFolder}",
            "preLaunchTask": "Build"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Generate NPM Package Temp",
            "runtimeExecutable": "node",
            "runtimeArgs": [
                "-e",
                "const fs = require('fs'); const path = require('path'); const { execSync } = require('child_process'); console.log('ðŸ”§ Building project...'); execSync('npm run build', {stdio: 'inherit'}); console.log('ðŸ“¦ Creating package...'); execSync('npm pack', {stdio: 'inherit'}); const packageFile = execSync('ls project-fusion-*.tgz').toString().trim(); console.log('ðŸ“‚ Creating temp/package/ directory...'); fs.mkdirSync('temp/package', {recursive: true}); console.log('ðŸ“¤ Extracting package...'); execSync(`tar -xzf ${packageFile} -C temp/package --strip-components=1`, {stdio: 'inherit'}); console.log('ðŸ“¥ Installing dependencies...'); execSync('npm install --production', {cwd: 'temp/package', stdio: 'inherit'}); console.log('âœ… Testing CLI...'); execSync('node dist/cli.js --help', {cwd: 'temp/package', stdio: 'inherit'}); console.log('ðŸ§ª Testing fusion...'); execSync('node dist/cli.js init --force', {cwd: 'temp/package', stdio: 'inherit'}); execSync('node dist/cli.js fusion', {cwd: 'temp/package', stdio: 'inherit'}); console.log('ðŸ§¹ Cleaning up...'); fs.unlinkSync(packageFile); console.log('âœ¨ Package test completed! Check temp/package/ for results.');"
            ],
            "program": "${workspaceFolder}",
            "console": "integratedTerminal",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Help",
            "program": "${workspaceFolder}/dist/cli.js",
            "args": [
                "--help"
            ],
            "console": "integratedTerminal",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "cwd": "${workspaceFolder}",
            "preLaunchTask": "Build"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Init",
            "program": "${workspaceFolder}/dist/cli.js",
            "args": [
                "init"
            ],
            "console": "integratedTerminal",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "cwd": "${workspaceFolder}",
            "preLaunchTask": "Build"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Init (Force)",
            "program": "${workspaceFolder}/dist/cli.js",
            "args": [
                "init",
                "--force"
            ],
            "console": "integratedTerminal",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "cwd": "${workspaceFolder}",
            "preLaunchTask": "Build"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Tests",
            "runtimeExecutable": "npm",
            "runtimeArgs": [
                "run",
                "test"
            ],
            "program": "${workspaceFolder}",
            "console": "integratedTerminal",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "cwd": "${workspaceFolder}"
        }
    ]
}