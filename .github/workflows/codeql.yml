name: CodeQL

on:
  push:
    branches: ['**', '!skip-ci/**', '!no-ci/**', '!wip/**']
    paths-ignore:
      - 'dist/**'
      - 'project-fusioned.*'
  pull_request:
    branches: ['**', '!skip-ci/**', '!no-ci/**', '!wip/**']
    paths-ignore:
      - 'dist/**'
      - 'project-fusioned.*'
  schedule:
    - cron: '21 17 * * 5'

# Concurrency group: only cancel for PR updates, not for main branch pushes
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  # Only cancel in-progress runs for pull requests
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      actions: read
      contents: read
      security-events: write
    if: ${{ !startsWith(github.head_ref, 'wip/') && !startsWith(github.head_ref, 'skip-ci/') && !startsWith(github.head_ref, 'no-ci/') }}

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript-typescript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-extended,security-and-quality

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --ignore-scripts

    - name: Build
      run: npm run -s build || echo "build skipped"

    - name: Perform CodeQL Analysis
      id: codeql-analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        output: sarif-results
        upload: true
        
    - name: Check for Security Issues
      run: |
        # Find the SARIF file generated by CodeQL
        sarif_file=$(find sarif-results -name "*.sarif" -type f | head -1)
        
        if [ ! -f "$sarif_file" ]; then
          echo "‚ÑπÔ∏è No SARIF file found - analysis may have been skipped"
          exit 0
        fi
        
        # Install jq if not available
        if ! command -v jq &> /dev/null; then
          sudo apt-get update && sudo apt-get install -y jq
        fi
        
        # Count issues by severity
        error_count=$(jq '[.runs[].results[] | select(.level == "error")] | length' "$sarif_file" 2>/dev/null || echo "0")
        warning_count=$(jq '[.runs[].results[] | select(.level == "warning")] | length' "$sarif_file" 2>/dev/null || echo "0")
        note_count=$(jq '[.runs[].results[] | select(.level == "note")] | length' "$sarif_file" 2>/dev/null || echo "0")
        
        # Also check for high/critical severity based on rule properties
        high_severity_count=$(jq '[.runs[].results[] | select(
          .rule.properties.precision == "high" or 
          .rule.properties.precision == "very-high" or
          .rule.properties["security-severity"] >= "7.0" or
          .rule.tags | contains(["security"])
        )] | length' "$sarif_file" 2>/dev/null || echo "0")
        
        echo "üìä CodeQL Analysis Results:"
        echo "  - Errors: $error_count"
        echo "  - Warnings: $warning_count"  
        echo "  - Notes: $note_count"
        echo "  - High/Critical Security Issues: $high_severity_count"
        
        # Fail if there are any high severity security issues
        if [ "$high_severity_count" -gt 0 ] || [ "$error_count" -gt 0 ]; then
          echo ""
          echo "‚ùå Found $high_severity_count high/critical severity security issues and $error_count errors!"
          echo "üìù View details at: https://github.com/${{ github.repository }}/security/code-scanning"
          echo ""
          echo "To fix these issues:"
          echo "1. Review the security alerts in the Security tab"
          echo "2. Apply the recommended fixes"
          echo "3. Push the fixes to trigger a new scan"
          exit 1
        else
          echo "‚úÖ No high/critical severity issues found"
        fi