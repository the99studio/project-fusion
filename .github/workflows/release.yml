name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-*'  # beta/rc/alpha

# Prevent concurrent releases
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

# Minimal permissions at workflow level
permissions:
  contents: write    # Create GitHub release
  id-token: write    # NPM provenance
  actions: read
  packages: write    # Future GitHub Packages support

jobs:
  test:
    uses: ./.github/workflows/build-test.yml
    
  release:
    name: Create Release & Publish
    runs-on: ubuntu-latest
    needs: test
    # Only run on main repo, not forks
    if: github.repository == 'the99studio/project-fusion'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Verify version consistency
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "❌ Version mismatch!"
            echo "   Tag: v$TAG_VERSION"
            echo "   Package.json: $PACKAGE_VERSION"
            exit 1
          fi
          
          echo "✅ Version $PACKAGE_VERSION ready for release"
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install and build
        run: |
          npm ci
          npm run build:clean
      
      - name: Security audit
        run: npm audit --audit-level=high || echo "::warning::Security vulnerabilities found"
      
      - name: Publish to NPM
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          
          # Publish with appropriate tag
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Publishing stable version $VERSION"
            npm publish --tag latest --provenance --access public
          elif [[ "$VERSION" =~ (alpha|beta|rc) ]]; then
            echo "Publishing pre-release version $VERSION"
            npm publish --tag next --provenance --access public
          else
            echo "::error::Invalid version format: $VERSION"
            exit 1
          fi
        env:
          NPM_CONFIG_PROVENANCE: true
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, '-') }}
          name: Release ${{ github.ref_name }}